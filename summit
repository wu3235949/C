//求出整数（+/-）的二进制数中1的个数
#include <stdio.h>
int main()
{
	int i,num,count;
	count =0;
	num=0;
	scanf("%d",&num);
	for(i=0;i<32;i++) {
		if(1==((num>>i)&1))
		  count++;
	}
	printf("%d",count);
	return 0;
}

#include <stdio.h>
int count_number_one(unsigned int n)//负数转为无符号数
{
	int count=0;
	while(n)
	{
		if(n%2 ==1)
		{
			count++;
		}
		n/=2;
	}
	return count;
}
int main()
{
    int a,ret;
    scanf("%d",&a);
    ret=count_number_one(a);
    printf("%d",ret);
	return 0;
}

#include <stdio.h>              //最高效算法
int count_number_one(int n)
{   int count=0;
    while(n)
    {
    	n=n&(n-1);
    	count++;
    }
	return count;
}
int main()
{
    int a,ret;
    scanf("%d",&a);
    ret=count_number_one(a);
    printf("%d",ret);
	return 0;
}
//13           count
//1101  n        0
//1100  n-1
//1100  n        1
//1011  n-1
//1000  n        2
//0111  n-1
//0000  n        3
//---------------------------------------------------
struct stu                                                       //结构体struct
{              //成员变量
	char name[20];
	int age;
	char id[20]; 
} ;
#include <stdio.h>
int main()
{
    struct stu s1 = {"张三",20,"201800250"};    //结构体变量.成员名
        struct stu* ps=&s1;
    printf("s1 name=%s\n",(*ps).name);
       printf("s1 name=%s\n",ps->name);        //结构体指针->成员名
    printf("s1 name=%s\n",s1.name);
        printf("s1 age=%d\n",s1.age);
            printf("s1 id=%s\n",s1.id);
	return 0;
}
//---------------------------------------------------------------------
//求二进制中不同位的个数（两个int32位整数的二进制表达中，有多少个位（bit）不同？） exp 1999 2299  为7
int get_diffit(int a,int b)
{
	int c=a^b;
	int count=0;
	while(c)
	{
		c=c&(c-1);
		count++;
	}
	return count;
}
int main()
{
	int a=0;
	int b=0;
	scanf("%d%d",&a,&b);
	printf("%d",get_diffit(a,b));
	return 0;
}
//----------------------------------------------------------------------
//分别打印一个数二进制的奇数位和偶数位
void print(int a)
{
	int i =0;
	printf("奇数位\n");
	for(i=30;i>=0;i-=2)
	{
		printf("%d ",(a>>i)&1);
	}
	printf("\n");
	printf("偶数位\n");
	for(i=31;i>=1;i-=2)
	{
		printf("%d ",(a>>i)&1);
	}
}
int main()
{
	int a;
	scanf("%d",&a);
	print(a);
	return 0;
}
//-------------------------------------------------------------------
//使用指针打印数组内容
void print(int*p,int m)
{
	int i=0;
	for(i=0;i<m;i++)
	{
		printf("%d ",*(p+i));
	}
}
int main()
{
	int number=0;
	int a[]={1,2,3,4,5,6,7,8,9,10,};
	number=sizeof(a)/sizeof(a[0]);
	print(a,number);
	return 0;
}
